{"version":3,"sources":["components/radioButton/RadioButton.js","components/categories/Categories.js","components/inputText/InputText.js","api/index.js","components/form/Form.js","components/animation/Animation.js","components/modal/Modal.js","components/toggleModal/ToggleModal.js","components/header/Header.js","components/avatar/Avatar.js","components/card/Card.js","utils/dateToHours.js","components/alert/Alert.js","components/spiner/Spiner.js","components/jokeList/JokeList.js","components/favouriteList/FavouriteList.js","App.js","hooks/useChuckApi.js","serviceWorker.js","index.js"],"names":["RadionButton","label","active","value","name","className","onChange","cx","type","id","checked","htmlFor","Categories","options","role","map","option","isActive","key","onClick","InputText","placeholder","http","axios","create","baseURL","getJokes","url","get","Form","onSubmit","useState","mode","setMode","category","setCategory","query","setQuery","categories","setCategories","useEffect","a","data","handleRadioChange","event","target","preventDefault","trim","apiUrlsMapper","random","search","length","Animation","animationType","children","show","timeout","onEnter","onEntering","onEntered","onExit","onExiting","onExited","CSSTransition","in","classNames","unmountOnExit","T","string","node","required","func","bool","number","defaultProps","Modal","isOpen","onClose","createPortal","document","getElementById","ToggleModal","Header","toggleModalOpen","isModalOpen","Avatar","src","alt","Card","joke","inFavouriteList","isFavourite","onFavouriteChange","updated_at","icon_url","tabIndex","href","date","currentDate","Date","now","incomingDate","getTime","Math","floor","dateToHours","Alert","text","Spiner","JokeList","favourites","apiRequestData","restProps","isLoading","isError","showInit","undefined","showError","showData","result","showEmpty","some","FavouriteList","favourite","App","setFavourites","setData","setIsError","setIsLoading","total","hasOwnProperty","useChuckApi","doFetch","storageItem","localStorage","getItem","JSON","parse","getStorageItem","setItem","stringify","action","body","classList","handleFavouritesUpdate","nextFavourite","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6333fadc.chunk.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport T from 'prop-types';\n\nconst RadionButton = ({\n  label,\n  active,\n  value,\n  name,\n  className = 'mb-1',\n  onChange,\n}) => (\n  <div className={cx('custom-control custom-radio', className)}>\n    <input\n      className=\"custom-control-input\"\n      type=\"radio\"\n      name={name}\n      id={value}\n      value={value}\n      checked={value === active}\n      onChange={onChange}\n    />\n    <label className=\"custom-control-label fz-18 lh-26\" htmlFor={value}>\n      {label}\n    </label>\n  </div>\n);\n\nRadionButton.propTypes = {\n  value: T.string.isRequired,\n  name: T.string.isRequired,\n  onChange: T.func.isRequired,\n  label: T.string,\n  active: T.string,\n  className: T.string,\n};\n\nexport default RadionButton;\n","import React from 'react';\nimport cx from 'classnames';\nimport T from 'prop-types';\n\nimport './Categories.scss';\n\nconst Categories = ({options, active, onChange}) => (\n  <div className=\"btn-group d-flex flex-wrap mt-2 mb-3\" role=\"group\">\n    {options.map(option => {\n      const isActive = active === option;\n      return (\n        <button\n          key={option}\n          className={cx('btn-sm category-btn', {active: isActive})}\n          type=\"button\"\n          onClick={() => (isActive ? null : onChange(option))}\n        >\n          {option}\n        </button>\n      );\n    })}\n  </div>\n);\n\nCategories.propTypes = {\n  options: T.arrayOf(T.string).isRequired,\n  active: T.string.isRequired,\n  onChange: T.func.isRequired,\n  className: T.string,\n};\n\nexport default Categories;\n","import React from 'react';\nimport cx from 'classnames';\nimport T from 'prop-types';\n\nconst InputText = ({\n  placeholder,\n  value,\n  onChange,\n  className = 'mb-3 lh-22',\n}) => (\n  <input\n    className={cx('form-control', className)}\n    type=\"text\"\n    placeholder={placeholder}\n    value={value}\n    onChange={onChange}\n  />\n);\n\nInputText.propTypes = {\n  value: T.string.isRequired,\n  onChange: T.func.isRequired,\n  placeholder: T.string,\n  className: T.string,\n};\n\nexport default InputText;\n","import axios from 'axios';\n\nexport const http = axios.create({\n  baseURL: 'https://api.chucknorris.io/jokes',\n});\n\nexport const getJokes = url => http.get(url);\nexport const getCategories = () => http.get('/categories');\n","import React, {useState, useEffect} from 'react';\nimport cx from 'classnames';\nimport T from 'prop-types';\n\nimport RadionButton from '../radioButton/RadioButton';\nimport Categories from '../categories/Categories';\nimport InputText from '../inputText/InputText';\nimport {getCategories} from '../../api';\n\nconst Form = ({onSubmit, className = 'mb-4'}) => {\n  const [mode, setMode] = useState('random');\n  const [category, setCategory] = useState();\n  const [query, setQuery] = useState('');\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    (async function fetchCategories() {\n      const {data} = await getCategories();\n      setCategory(data[0]);\n      setCategories(data);\n    })();\n  }, []);\n\n  const handleCategoryChange = category => setCategory(category);\n  const handleRadioChange = event => setMode(event.target.value);\n  const handleInputChange = event => setQuery(event.target.value);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (mode === 'search' && query.trim() === '') return;\n    if (mode === 'category' && !category) return;\n\n    const apiUrlsMapper = {\n      random: '/random',\n      categories: `/random?category=${category}`,\n      search: `/search?query=${query}`,\n    };\n    onSubmit(apiUrlsMapper[mode]);\n  };\n\n  return (\n    <form className={cx('form pt-1', className)} onSubmit={handleFormSubmit}>\n      <div className=\"form-group\">\n        <RadionButton\n          label=\"Random\"\n          name=\"joke\"\n          value=\"random\"\n          active={mode}\n          onChange={handleRadioChange}\n        />\n        <RadionButton\n          label=\"From categories\"\n          name=\"joke\"\n          value=\"categories\"\n          active={mode}\n          onChange={handleRadioChange}\n        />\n        {mode === 'categories' && !!categories.length ? (\n          <Categories\n            options={categories}\n            active={category}\n            onChange={handleCategoryChange}\n          />\n        ) : null}\n        <RadionButton\n          label=\"Search\"\n          name=\"joke\"\n          value=\"search\"\n          active={mode}\n          onChange={handleRadioChange}\n        />\n        {mode === 'search' && (\n          <InputText\n            value={query}\n            onChange={handleInputChange}\n            placeholder=\"Free text search\"\n          />\n        )}\n      </div>\n      <button\n        className=\"btn btn-lg btn-primary btn-gradient fw-700 lh-22\"\n        type=\"submit\"\n      >\n        Get a joke\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: T.func.isRequired,\n  className: T.string,\n};\n\nexport default Form;\n","import React from 'react';\n\nimport T from 'prop-types';\nimport {CSSTransition} from 'react-transition-group';\n\nimport './Animation.scss';\n\nconst Animation = ({\n  animationType,\n  children,\n  show,\n  timeout,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n}) => (\n  <CSSTransition\n    in={show}\n    timeout={timeout}\n    classNames={animationType}\n    unmountOnExit\n    onEnter={onEnter}\n    onEntering={onEntering}\n    onEntered={onEntered}\n    onExit={onExit}\n    onExiting={onExiting}\n    onExited={onExited}\n  >\n    {children}\n  </CSSTransition>\n);\n\nAnimation.T = {\n  animationType: T.string,\n  children: T.node.required,\n  onEnter: T.func,\n  onEntering: T.func,\n  onEntered: T.func,\n  onExit: T.func,\n  onExiting: T.func,\n  onExited: T.func,\n  show: T.bool.required,\n  timeout: T.number,\n};\n\nAnimation.defaultProps = {\n  show: false,\n  timeout: 300,\n  animationType: 'fadeIn',\n};\n\nexport default Animation;\n","import React from 'react';\nimport {createPortal} from 'react-dom';\n\nimport T from 'prop-types';\nimport cx from 'classnames';\n\nimport './Modal.scss';\nimport Animation from '../animation/Animation';\n\nconst Modal = ({isOpen, onClose, children, className}) => {\n  const handleModalClose = () => onClose(false);\n  return createPortal(\n    <Animation show={isOpen}>\n      <div className={cx('modal', className)}>\n        <div className=\"modal-backdrop\" onClick={handleModalClose} />\n        <div className=\"modal-content bg-light\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12 layout-offset\">{children}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Animation>,\n    document.getElementById('modal-root')\n  );\n};\n\nModal.propTypes = {\n  onClose: T.func.isRequired,\n  children: T.element,\n  className: T.string,\n};\n\nexport default Modal;\n","import React from 'react';\nimport cx from 'classnames';\nimport T from 'prop-types';\n\nimport './ToggleModal.scss';\n\nconst ToggleModal = ({onClick, active = false, className}) => {\n  const handleToggle = () => onClick(!active);\n  return (\n    <div\n      className={cx('toggle-modal d-flex', {active}, className)}\n      onClick={handleToggle}\n    >\n      <div className=\"menu-icon\" />\n      <span className=\"ml-2 text-muted lh-28 fz-20 fw-700\">Favourite</span>\n    </div>\n  );\n};\n\nToggleModal.propTypes = {\n  onClick: T.func.isRequired,\n  active: T.bool,\n  className: T.string,\n};\n\nexport default ToggleModal;\n","import React from 'react';\n\nimport T from 'prop-types';\nimport cx from 'classnames';\n\nimport ToggleModal from '../toggleModal/ToggleModal';\n\nconst Header = ({toggleModalOpen, isModalOpen, className = 'mb-4'}) => (\n  <header className={cx('pb-2', className)}>\n    <nav className=\"navbar pt-0\">\n      <h1 className=\"navbar-brand lh-28 fw-700 p-0\">MSI 2020</h1>\n      <ToggleModal\n        onClick={toggleModalOpen}\n        active={isModalOpen}\n        className=\"d-xl-none\"\n      />\n    </nav>\n    <h2 className=\"fz-32 lh-44 fw-700\">Hey!</h2>\n    <h4 className=\"fw-500 fz-24 lh-44\">Let's try to find a joke for you</h4>\n  </header>\n);\n\nHeader.propTypes = {\n  isModalOpen: T.bool.isRequired,\n  toggleModalOpen: T.func.isRequired,\n  className: T.string,\n};\n\nexport default Header;\n","import React from 'react';\nimport T from 'prop-types';\nimport cx from 'classnames';\n\nimport './Avatar.scss';\n\nconst Avatar = ({src, className}) => (\n  <div className={cx('avatar', className)}>\n    {src ? (\n      <img className=\"avatar-img\" src={src} alt=\"joke icon\" />\n    ) : (\n      <span className=\"avatar-empty icon-message text-muted\" />\n    )}\n  </div>\n);\n\nAvatar.propTypes = {\n  src: T.string,\n  className: T.string,\n};\n\nexport default Avatar;\n","import React from 'react';\nimport cx from 'classnames';\nimport T from 'prop-types';\n\nimport Avatar from '../avatar/Avatar';\nimport {dateToHours} from '../../utils/dateToHours';\n\nimport './Card.scss';\n\nconst Card = ({\n  joke,\n  inFavouriteList,\n  isFavourite,\n  onFavouriteChange,\n  className = 'mb-3',\n}) => {\n  const {id, value, updated_at, categories, url, icon_url} = joke;\n  const handleFavouriteChange = () => onFavouriteChange(joke);\n\n  return (\n    <div className={cx('border-0 p-2', className)}>\n      <div className=\"card-header bg-transparent text-right border-0 pb-0\">\n        <span\n          className={`icon-heart${isFavourite ? '-fill' : ''} text-danger`}\n          onClick={handleFavouriteChange}\n          tabIndex=\"0\"\n        />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"d-flex flex-grow-1\">\n          <div className=\"flex-shrink-0 mr-3\">\n            <Avatar src={icon_url} />\n          </div>\n          <div className=\"flex-grow-1\">\n            <div className=\"card-title mb-1 fz-10 lh-14 fw-500\">\n              <span className=\"text-muted\">ID: </span>\n              <a href={url}>\n                {id} <span className=\"icon-link text-primary ml-1\" />\n              </a>\n            </div>\n            <p\n              className={`card-text text-wrap ${\n                inFavouriteList ? 'fz-14 lh-20' : 'fz-18'\n              }`}\n            >\n              {value}\n            </p>\n            <div className=\"d-md-flex justify-content-between align-items-center\">\n              <p className=\"text-muted fz-10 lh-14 mb-2 m-md-0\">\n                Last update: {dateToHours(updated_at)} hours ago\n              </p>\n              {!!categories.length &&\n                categories.map(category => (\n                  <div\n                    key={category}\n                    className={`btn-sm fz-10 lh-14 d-inline-block m-0 card-category ${\n                      inFavouriteList ? 'gray' : 'light'\n                    }`}\n                  >\n                    {category}\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  joke: T.object.isRequired,\n  onFavouriteChange: T.func.isRequired,\n  isFavourite: T.bool,\n  inFavouriteList: T.bool,\n  className: T.string,\n};\n\nexport default Card;\n","export const dateToHours = date => {\n  const currentDate = Date.now();\n  const incomingDate = new Date(date).getTime();\n\n  return Math.floor((currentDate - incomingDate) / 1000 / 3600);\n};\n","import React from 'react';\nimport T from 'prop-types';\n\nconst Alert = ({type = 'info', text}) => (\n  <div className={`text-center alert alert-${type}`} role=\"alert\">\n    {text}\n  </div>\n);\n\nAlert.propTypes = {\n  type: T.string,\n  text: T.string.isRequired,\n};\n\nexport default Alert;\n","import React from 'react';\nimport './Spiner.scss';\n\nconst Spiner = () => (\n  <div className=\"loading-spiner\">\n    <div className=\"loading\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n\nexport default Spiner;\n","import React from 'react';\nimport T from 'prop-types';\n\nimport Card from '../card/Card';\nimport Alert from '../alert/Alert';\nimport Spiner from '../spiner/Spiner';\n\nconst JokeList = ({favourites, apiRequestData, ...restProps}) => {\n  const {data, isLoading, isError} = apiRequestData;\n  const showInit = !isLoading && data === undefined;\n  const showError = !isLoading && isError;\n  const showData = !isLoading && !isError && !!data?.result.length;\n  const showEmpty = !isLoading && !isError && !showInit && !data?.result.length;\n\n  return (\n    <div className=\"card-wrapper\">\n      {showInit && (\n        <Alert text=\"Click on the button above for getting a joke\" />\n      )}\n      {isLoading && <Spiner />}\n      {showData &&\n        data.result.map(joke => (\n          <Card\n            key={joke.id}\n            {...restProps}\n            joke={joke}\n            isFavourite={favourites.some(({id}) => id === joke.id)}\n            className=\"main-card rounded-lg mb-3 p-md-4\"\n          />\n        ))}\n\n      {showEmpty && <Alert type=\"secondary\" text=\"No jokes\" />}\n      {showError && <Alert type=\"danger\" text=\"Something go wrong!\" />}\n    </div>\n  );\n};\n\nJokeList.propTypes = {\n  onFavouriteChange: T.func.isRequired,\n  apiRequestData: T.object.isRequired,\n  favourites: T.array.isRequired,\n};\n\nexport default JokeList;\n","import React from 'react';\nimport T from 'prop-types';\n\nimport Card from '../card/Card';\n\nconst FavouriteList = ({favourites, onFavouriteChange}) => (\n  <>\n    {favourites.map(favourite => (\n      <Card\n        key={favourite.id}\n        joke={favourite}\n        isFavourite\n        inFavouriteList\n        onFavouriteChange={onFavouriteChange}\n        className=\"modal-card rounded-sm mb-3\"\n      />\n    ))}\n  </>\n);\n\nFavouriteList.propTypes = {\n  favourites: T.array.isRequired,\n  onFavouriteChange: T.func.isRequired,\n};\n\nexport default FavouriteList;\n","import React, {useState, useEffect} from 'react';\n\nimport Form from './components/form/Form';\nimport Modal from './components/modal/Modal';\nimport Header from './components/header/Header';\nimport JokeList from './components/jokeList/JokeList';\nimport FavouriteList from './components/favouriteList/FavouriteList';\n\nimport {useChuckApi} from './hooks/useChuckApi';\n\nconst handlePreventScroll = action =>\n  document.body.classList[action]('no-scroll');\n\nconst getStorageItem = key => {\n  const storageItem = localStorage.getItem(key);\n  return storageItem ? JSON.parse(storageItem) : [];\n};\n\nconst App = () => {\n  const [isModalOpen, toggleModalOpen] = useState(false);\n  const [favourites, setFavourites] = useState([]);\n  const [apiRequestData, doFetch] = useChuckApi();\n\n  useEffect(() => {\n    setFavourites(getStorageItem('favourites'));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('favourites', JSON.stringify(favourites));\n  }, [favourites]);\n\n  useEffect(() => {\n    handlePreventScroll(isModalOpen ? 'add' : 'remove');\n  }, [isModalOpen]);\n\n  const handleFormSubmit = url => doFetch(url);\n\n  const handleFavouritesUpdate = joke => {\n    let nextFavourite;\n    if (favourites.some(({id}) => id === joke.id)) {\n      nextFavourite = favourites.filter(({id}) => id !== joke.id);\n    } else {\n      nextFavourite = [...favourites, joke];\n    }\n    setFavourites(nextFavourite);\n  };\n\n  return (\n    <>\n      <div className=\"container-xl\">\n        <div className=\"row\">\n          <div className=\"col-12 col-xl-7 layout-offset\">\n            <Header\n              toggleModalOpen={toggleModalOpen}\n              isModalOpen={isModalOpen}\n            />\n\n            <Form onSubmit={handleFormSubmit} />\n\n            <JokeList\n              favourites={favourites}\n              apiRequestData={apiRequestData}\n              onFavouriteChange={handleFavouritesUpdate}\n            />\n          </div>\n          <div className=\"d-none d-xl-flex col-xl-5 layout-offset flex-column bg-light\">\n            <h5 className=\"fw-500 fz-20 lh-28 mb-3 text-secondary\">\n              Favourite\n            </h5>\n            <FavouriteList\n              favourites={favourites}\n              onFavouriteChange={handleFavouritesUpdate}\n            />\n          </div>\n        </div>\n      </div>\n\n      <Modal\n        isOpen={isModalOpen}\n        onClose={toggleModalOpen}\n        className=\"d-xl-none\"\n      >\n        <FavouriteList\n          favourites={favourites}\n          onFavouriteChange={handleFavouritesUpdate}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default App;\n","import {useState} from 'react';\nimport {getJokes} from '../api';\n\nexport const useChuckApi = () => {\n  const [data, setData] = useState();\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchData(url) {\n    setIsError(false);\n    setIsLoading(true);\n\n    try {\n      const {data} = await getJokes(url);\n      let result = {total: 0, result: []};\n      if (typeof data === 'object') {\n        result = data.hasOwnProperty('total')\n          ? data\n          : {total: 1, result: [data]};\n      }\n      setData(result);\n    } catch (error) {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  }\n  return [{isLoading, data, isError}, fetchData];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}